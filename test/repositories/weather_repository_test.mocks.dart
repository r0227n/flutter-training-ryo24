// Mocks generated by Mockito 5.4.5 from annotations
// in flutter_training/test/repositories/weather_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter_training/data/repositories/weather_repository.dart'
    as _i3;
import 'package:flutter_training/data/services/weather_data_service.dart'
    as _i2;
import 'package:flutter_training/domain/models/weather.dart' as _i5;
import 'package:flutter_training/domain/models/weather_area.dart' as _i7;
import 'package:flutter_training/utils/result.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;
import 'package:yumemi_weather/yumemi_weather.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeWeatherDataService_0 extends _i1.SmartFake
    implements _i2.WeatherDataService {
  _FakeWeatherDataService_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [WeatherRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeatherRepository extends _i1.Mock implements _i3.WeatherRepository {
  @override
  _i2.WeatherDataService get weatherDataService =>
      (super.noSuchMethod(
            Invocation.getter(#weatherDataService),
            returnValue: _FakeWeatherDataService_0(
              this,
              Invocation.getter(#weatherDataService),
            ),
            returnValueForMissingStub: _FakeWeatherDataService_0(
              this,
              Invocation.getter(#weatherDataService),
            ),
          )
          as _i2.WeatherDataService);

  @override
  _i4.Result<_i5.Weather, _i6.YumemiWeatherError> getWeather({
    required DateTime? date,
    _i7.WeatherCity? area = _i7.WeatherCity.tokyo,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getWeather, [], {#date: date, #area: area}),
            returnValue: _i8
                .dummyValue<_i4.Result<_i5.Weather, _i6.YumemiWeatherError>>(
                  this,
                  Invocation.method(#getWeather, [], {
                    #date: date,
                    #area: area,
                  }),
                ),
            returnValueForMissingStub: _i8
                .dummyValue<_i4.Result<_i5.Weather, _i6.YumemiWeatherError>>(
                  this,
                  Invocation.method(#getWeather, [], {
                    #date: date,
                    #area: area,
                  }),
                ),
          )
          as _i4.Result<_i5.Weather, _i6.YumemiWeatherError>);
}
